#!/bin/bash

# üé® Safe Unichain Rebranding Script
# –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–æ—á–µ—á–Ω–æ–≥–æ —Ä–µ–±—Ä–µ–Ω–¥–∏–Ω–≥–∞ UNI –≤ Unichain

set -e

echo "üé® –ù–∞—á–∞–ª–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–±—Ä–µ–Ω–¥–∏–Ω–≥–∞ UNI –≤ Unichain..."

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
if [ ! -d "uni-source-backup" ]; then
    cp -r uni-source uni-source-backup
    echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ uni-source-backup/"
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–º–µ–Ω—ã –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö —Ñ–∞–π–ª–æ–≤
safe_replace_headers() {
    echo "üìù –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–º–µ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ —Ñ–∞–π–ª–æ–≤..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å –Ω–æ–≤—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
    cat > /tmp/unichain_header.txt << 'EOF'
/*
    This file is part of Unichain Blockchain Library.

    Unichain Blockchain Library is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.

    Unichain Blockchain Library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Unichain Blockchain Library.  If not, see <http://www.gnu.org/licenses/>.

    Copyright 2017-2024 Unichain Foundation
*/
EOF

    # –ó–∞–º–µ–Ω–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –≤ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–∞—Ö
    local files=(
        "uni-source/ton/ton-types.h"
        "uni-source/ton/ton-types.cpp"
        "uni-source/validator/validator-options.h"
        "uni-source/validator-engine/validator-engine.h"
        "uni-source/lite-client/lite-client.h"
    )

    for file in "${files[@]}"; do
        if [ -f "$file" ]; then
            echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤ $file"
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
            cp "$file" "$file.orig"
            
            # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–ø–µ—Ä–≤—ã–µ 20 —Å—Ç—Ä–æ–∫)
            head -n 20 "$file" | grep -q "UNI Blockchain" && {
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å –∑–∞–º–µ–Ω–µ–Ω–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
                cat /tmp/unichain_header.txt > "$file.new"
                tail -n +21 "$file" >> "$file.new"
                mv "$file.new" "$file"
                echo "‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω –≤ $file"
            } || echo "‚ö†Ô∏è  –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $file"
        fi
    done

    rm -f /tmp/unichain_header.txt
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è namespace
safe_replace_namespace() {
    echo "üîß –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–º–µ–Ω–∞ namespace..."
    
    # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ namespace, –Ω–µ —Ç—Ä–æ–≥–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
    find uni-source -name "*.h" -o -name "*.cpp" -o -name "*.cc" | while read file; do
        if grep -q "namespace ton" "$file"; then
            echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ namespace –≤ $file"
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
            cp "$file" "$file.namespace.backup"
            
            # –ó–∞–º–µ–Ω—è–µ–º namespace ton –Ω–∞ namespace unichain
            sed -i.tmp 's/namespace ton/namespace unichain/g' "$file"
            sed -i.tmp 's/}  \/\/ namespace ton/}  \/\/ namespace unichain/g' "$file"
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–º–µ–Ω–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
            if grep -q "namespace unichain" "$file"; then
                rm -f "$file.tmp"
                echo "‚úÖ Namespace –æ–±–Ω–æ–≤–ª–µ–Ω –≤ $file"
            else
                echo "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è namespace –≤ $file"
                mv "$file.namespace.backup" "$file"
            fi
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è CMakeLists.txt
safe_update_cmake() {
    echo "‚öôÔ∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ CMakeLists.txt..."
    
    if [ -f "uni-source/CMakeLists.txt" ]; then
        cp "uni-source/CMakeLists.txt" "uni-source/CMakeLists.txt.backup"
        
        # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
        sed -i.tmp 's/project(UNI VERSION 0.5 LANGUAGES C CXX)/project(UNICHAIN VERSION 1.0 LANGUAGES C CXX)/g' uni-source/CMakeLists.txt
        sed -i.tmp 's/  Out-of-source build should be used to build UNI./  Out-of-source build should be used to build Unichain./g' uni-source/CMakeLists.txt
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if grep -q "project(UNICHAIN" uni-source/CMakeLists.txt; then
            rm -f uni-source/CMakeLists.txt.tmp
            echo "‚úÖ CMakeLists.txt –æ–±–Ω–æ–≤–ª–µ–Ω"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è CMakeLists.txt"
            mv "uni-source/CMakeLists.txt.backup" "uni-source/CMakeLists.txt"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç Unichain
create_unichain_constants() {
    echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç Unichain..."
    
    # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª —Å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏ Unichain
    cat > uni-source/ton/unichain-constants.h << 'EOF'
/*
    This file is part of Unichain Blockchain Library.

    Unichain Blockchain Library is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.

    Unichain Blockchain Library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with Unichain Blockchain Library.  If not, see <http://www.gnu.org/licenses/>.

    Copyright 2017-2024 Unichain Foundation
*/
#pragma once

#include "ton/ton-types.h"

namespace unichain {

// Unichain specific constants
constexpr WorkchainId unichain_workchain_id = 0;
constexpr ShardId unichain_shard_id = 0x8000000000000000;
constexpr BlockSeqno unichain_genesis_seqno = 1;

// Token configuration
constexpr td::uint64 unichain_token_decimals = 9;
constexpr td::uint64 unichain_total_supply = 1000000000000000000ULL; // 1 billion tokens
constexpr td::uint64 unichain_min_stake = 1000000000ULL; // 1 token minimum stake

// Network configuration
constexpr int unichain_max_validators = 100;
constexpr int unichain_min_validators = 3;
constexpr td::uint32 unichain_block_time = 5; // 5 seconds
constexpr td::uint32 unichain_gas_price = 1000;
constexpr td::uint64 unichain_gas_limit = 1000000;

// Smart contract addresses
constexpr StdSmcAddress unichain_system_contract = {0};
constexpr StdSmcAddress unichain_config_contract = {1};
constexpr StdSmcAddress unichain_elector_contract = {2};
constexpr StdSmcAddress unichain_dns_contract = {3};

} // namespace unichain
EOF

    echo "‚úÖ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã Unichain —Å–æ–∑–¥–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è README
safe_update_readme() {
    echo "üìö –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ README..."
    
    if [ -f "uni-source/README.md" ]; then
        cp "uni-source/README.md" "uni-source/README.md.backup"
        
        # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –æ–ø–∏—Å–∞–Ω–∏—è
        sed -i.tmp 's/UNI/Unichain/g' uni-source/README.md
        sed -i.tmp 's/The Open Network/Next Generation Blockchain Technology/g' uni-source/README.md
        
        echo "‚úÖ README –æ–±–Ω–æ–≤–ª–µ–Ω"
        rm -f uni-source/README.md.tmp
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
verify_changes() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    
    local errors=0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã
    if grep -q "Unichain Blockchain Library" uni-source/ton/ton-types.h; then
        echo "‚úÖ ton-types.h –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå ton-types.h –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω"
        ((errors++))
    fi
    
    if grep -q "project(UNICHAIN" uni-source/CMakeLists.txt; then
        echo "‚úÖ CMakeLists.txt –æ–±–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå CMakeLists.txt –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω"
        ((errors++))
    fi
    
    if [ -f "uni-source/ton/unichain-constants.h" ]; then
        echo "‚úÖ –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã Unichain —Å–æ–∑–¥–∞–Ω—ã"
    else
        echo "‚ùå –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã Unichain –Ω–µ —Å–æ–∑–¥–∞–Ω—ã"
        ((errors++))
    fi
    
    if [ $errors -eq 0 ]; then
        echo "üéâ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
    else
        echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–æ $errors –æ—à–∏–±–æ–∫. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é."
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–∫–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
rollback_changes() {
    echo "üîÑ –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
    
    if [ -d "uni-source-backup" ]; then
        rm -rf uni-source
        cp -r uni-source-backup uni-source
        echo "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–∫–∞—á–µ–Ω—ã"
    else
        echo "‚ùå –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üé® –ù–∞—á–∞–ª–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–±—Ä–µ–Ω–¥–∏–Ω–≥–∞ UNI –≤ Unichain..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
    if [ ! -d "uni-source" ]; then
        echo "‚ùå –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ UNI –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./scripts/setup.sh"
        exit 1
    fi
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ä–µ–±—Ä–µ–Ω–¥–∏–Ω–≥–∞
    safe_replace_headers
    safe_replace_namespace
    safe_update_cmake
    create_unichain_constants
    safe_update_readme
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    verify_changes
    
    echo ""
    echo "üéâ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π —Ä–µ–±—Ä–µ–Ω–¥–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω!"
    echo ""
    echo "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω—ã –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤"
    echo "‚úÖ –ó–∞–º–µ–Ω–µ–Ω namespace ton –Ω–∞ unichain"
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω CMakeLists.txt"
    echo "‚úÖ –°–æ–∑–¥–∞–Ω—ã –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã Unichain"
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω README"
    echo ""
    echo "üîó –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è: git diff"
    echo "2. –°–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: ./scripts/build-unichain.sh"
    echo "3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å"
    echo ""
    echo "‚ö†Ô∏è  –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ uni-source-backup/"
    echo "üîÑ –î–ª—è –æ—Ç–∫–∞—Ç–∞: ./scripts/safe-rebrand.sh rollback"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
case "${1:-}" in
    "rollback")
        rollback_changes
        ;;
    *)
        main
        ;;
esac
